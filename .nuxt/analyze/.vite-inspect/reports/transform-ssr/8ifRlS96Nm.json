{
  "resolvedId": "/Users/murtadha.ramadhan/Documents/personal-website-3/components/content/HackerButton.vue?nuxt_component=async&nuxt_component_name=HackerButton",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n  <div class=\"px-4 py-8 flex items-center justify-center\">\n    <button\n      type=\"button\"\n      class=\"rounded-md bg-white dark:bg-gray-800 px-3 py-2 text-sm font-semibold text-gray-900 dark:text-white shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 hover:bg-gray-50 dark:hover:bg-gray-950 relative font-mono\"\n      @click=\"submit\"\n      @mouseenter=\"startScrambling\"\n    >\n      {{ displayText }}\n    </button>\n  </div>\n</template>\n\n<script setup>\nconst props = defineProps({\n  label: String,\n});\n\nconst displayText = ref(props.label);\nconst charset = \"abcdefghijklmnopqrstuvwxyz\";\n\nfunction randomChars(length) {\n  return Array.from(\n    { length },\n    () => charset[Math.floor(Math.random() * charset.length)]\n  ).join(\"\");\n}\n\nasync function scramble(input) {\n  let prefix = \"\";\n  for (let index = 0; index < input.length; index++) {\n    await new Promise((resolve) => setTimeout(resolve, 50));\n    prefix += input.charAt(index);\n    displayText.value = prefix + randomChars(input.length - prefix.length);\n  }\n}\n\nfunction startScrambling() {\n  scramble(props.label);\n}\n\nconst submit = () => {\n  startScrambling();\n  setTimeout(() => console.log(\"Submitted\"), props.label.length * 50);\n};\n\nwatch(\n  () => props.label,\n  (newValue) => {\n    displayText.value = newValue;\n  }\n);\n</script>\n",
      "start": 1717378017859,
      "end": 1717378018739,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1717378018739,
      "end": 1717378018739,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1717378018739,
      "end": 1717378018739,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1717378018739,
      "end": 1717378018739,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1717378018739,
      "end": 1717378018739,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1717378018739,
      "end": 1717378018739,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1717378018739,
      "end": 1717378018739,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1717378018739,
      "end": 1717378018739,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1717378018739,
      "end": 1717378018739,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1717378018739,
      "end": 1717378018739,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1717378018739,
      "end": 1717378018739,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1717378018739,
      "end": 1717378018739,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import { unref as _unref, mergeProps as _mergeProps } from \"vue\"\nimport { ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate } from \"vue/server-renderer\"\n\nconst charset = \"abcdefghijklmnopqrstuvwxyz\";\n\n\nconst _sfc_main = {\n  __name: 'HackerButton',\n  __ssrInlineRender: true,\n  props: {\n  label: String,\n},\n  setup(__props) {\n\nconst props = __props;\n\nconst displayText = ref(props.label);\nfunction randomChars(length) {\n  return Array.from(\n    { length },\n    () => charset[Math.floor(Math.random() * charset.length)]\n  ).join(\"\");\n}\n\nasync function scramble(input) {\n  let prefix = \"\";\n  for (let index = 0; index < input.length; index++) {\n    await new Promise((resolve) => setTimeout(resolve, 50));\n    prefix += input.charAt(index);\n    displayText.value = prefix + randomChars(input.length - prefix.length);\n  }\n}\n\nfunction startScrambling() {\n  scramble(props.label);\n}\n\nconst submit = () => {\n  startScrambling();\n  setTimeout(() => console.log(\"Submitted\"), props.label.length * 50);\n};\n\nwatch(\n  () => props.label,\n  (newValue) => {\n    displayText.value = newValue;\n  }\n);\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  _push(`<div${\n    _ssrRenderAttrs(_mergeProps({ class: \"px-4 py-8 flex items-center justify-center\" }, _attrs))\n  }><button type=\"button\" class=\"rounded-md bg-white dark:bg-gray-800 px-3 py-2 text-sm font-semibold text-gray-900 dark:text-white shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 hover:bg-gray-50 dark:hover:bg-gray-950 relative font-mono\">${\n    _ssrInterpolate(_unref(displayText))\n  }</button></div>`)\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/content/HackerButton.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1717378018739,
      "end": 1717378018740,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/murtadha.ramadhan/Documents/personal-website-3/components/content/HackerButton.vue"
        ],
        "sourcesContent": [
          "<template>\n  <div class=\"px-4 py-8 flex items-center justify-center\">\n    <button\n      type=\"button\"\n      class=\"rounded-md bg-white dark:bg-gray-800 px-3 py-2 text-sm font-semibold text-gray-900 dark:text-white shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 hover:bg-gray-50 dark:hover:bg-gray-950 relative font-mono\"\n      @click=\"submit\"\n      @mouseenter=\"startScrambling\"\n    >\n      {{ displayText }}\n    </button>\n  </div>\n</template>\n\n<script setup>\nconst props = defineProps({\n  label: String,\n});\n\nconst displayText = ref(props.label);\nconst charset = \"abcdefghijklmnopqrstuvwxyz\";\n\nfunction randomChars(length) {\n  return Array.from(\n    { length },\n    () => charset[Math.floor(Math.random() * charset.length)]\n  ).join(\"\");\n}\n\nasync function scramble(input) {\n  let prefix = \"\";\n  for (let index = 0; index < input.length; index++) {\n    await new Promise((resolve) => setTimeout(resolve, 50));\n    prefix += input.charAt(index);\n    displayText.value = prefix + randomChars(input.length - prefix.length);\n  }\n}\n\nfunction startScrambling() {\n  scramble(props.label);\n}\n\nconst submit = () => {\n  startScrambling();\n  setTimeout(() => console.log(\"Submitted\"), props.label.length * 50);\n};\n\nwatch(\n  () => props.label,\n  (newValue) => {\n    displayText.value = newValue;\n  }\n);\n</script>\n"
        ],
        "names": [],
        "mappings": ";;;AAmBA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C;;;;;;;;;AAPc;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAEZ,CAAC;AACH;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAGrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC;AACD;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3E,CAAC,CAAC,CAAC;AACH,CAAC;AACD;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC;AACD;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtE,CAAC,CAAC;AACF;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC;AACH,CAAC,CAAC;;;;;;;;;;;"
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1717378018740,
      "end": 1717378018740,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717378018740,
      "end": 1717378018740,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717378018740,
      "end": 1717378018740,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1717378018740,
      "end": 1717378018740,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1717378018740,
      "end": 1717378018740,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "result": "import { defineAsyncComponent } from \"vue\"\nexport default defineAsyncComponent(() => import(\"/Users/murtadha.ramadhan/Documents/personal-website-3/components/content/HackerButton.vue\").then(r => r.default))",
      "start": 1717378018740,
      "end": 1717378018740,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "replace",
      "start": 1717378018740,
      "end": 1717378018740,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1717378018740,
      "end": 1717378018740,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1717378018740,
      "end": 1717378018740,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1717378018740,
      "end": 1717378018740,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1717378018740,
      "end": 1717378018740,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1717378018740,
      "end": 1717378018740,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1717378018740,
      "end": 1717378018740,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1717378018740,
      "end": 1717378018740,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1717378018740,
      "end": 1717378018740,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1717378018740,
      "end": 1717378018740,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1717378018740,
      "end": 1717378018740,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1717378018740,
      "end": 1717378018740,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1717378018740,
      "end": 1717378018740,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1717378018740,
      "end": 1717378018740,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1717378018740,
      "end": 1717378018740,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1717378018740,
      "end": 1717378018740,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1717378018740,
      "end": 1717378018740,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1717378018740,
      "end": 1717378018740,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1717378018740,
      "end": 1717378018740,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1717378018740,
      "end": 1717378018740,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1717378018740,
      "end": 1717378018740,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1717378018740,
      "end": 1717378018740,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1717378018740,
      "end": 1717378018740,
      "order": "normal"
    }
  ]
}
