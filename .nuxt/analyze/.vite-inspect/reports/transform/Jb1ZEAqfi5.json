{
  "resolvedId": "/Users/murtadha.ramadhan/Documents/personal-website-3/node_modules/tailwind-merge/dist/lib/validators.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "var arbitraryValueRegex = /^\\[(?:([a-z-]+):)?(.+)\\]$/i;\nvar fractionRegex = /^\\d+\\/\\d+$/;\nvar stringLengths = /*#__PURE__*/new Set(['px', 'full', 'screen']);\nvar tshirtUnitRegex = /^(\\d+(\\.\\d+)?)?(xs|sm|md|lg|xl)$/;\nvar lengthUnitRegex = /\\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\\b(calc|min|max|clamp)\\(.+\\)|^0$/;\n// Shadow always begins with x and y offset separated by underscore\nvar shadowRegex = /^-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/;\nfunction isLength(value) {\n  return isNumber(value) || stringLengths.has(value) || fractionRegex.test(value) || isArbitraryLength(value);\n}\nfunction isArbitraryLength(value) {\n  return getIsArbitraryValue(value, 'length', isLengthOnly);\n}\nfunction isArbitrarySize(value) {\n  return getIsArbitraryValue(value, 'size', isNever);\n}\nfunction isArbitraryPosition(value) {\n  return getIsArbitraryValue(value, 'position', isNever);\n}\nfunction isArbitraryUrl(value) {\n  return getIsArbitraryValue(value, 'url', isUrl);\n}\nfunction isArbitraryNumber(value) {\n  return getIsArbitraryValue(value, 'number', isNumber);\n}\n/**\n * @deprecated Will be removed in next major version. Use `isArbitraryNumber` instead.\n */\nvar isArbitraryWeight = isArbitraryNumber;\nfunction isNumber(value) {\n  return !Number.isNaN(Number(value));\n}\nfunction isPercent(value) {\n  return value.endsWith('%') && isNumber(value.slice(0, -1));\n}\nfunction isInteger(value) {\n  return isIntegerOnly(value) || getIsArbitraryValue(value, 'number', isIntegerOnly);\n}\nfunction isArbitraryValue(value) {\n  return arbitraryValueRegex.test(value);\n}\nfunction isAny() {\n  return true;\n}\nfunction isTshirtSize(value) {\n  return tshirtUnitRegex.test(value);\n}\nfunction isArbitraryShadow(value) {\n  return getIsArbitraryValue(value, '', isShadow);\n}\nfunction getIsArbitraryValue(value, label, testValue) {\n  var result = arbitraryValueRegex.exec(value);\n  if (result) {\n    if (result[1]) {\n      return result[1] === label;\n    }\n    return testValue(result[2]);\n  }\n  return false;\n}\nfunction isLengthOnly(value) {\n  return lengthUnitRegex.test(value);\n}\nfunction isNever() {\n  return false;\n}\nfunction isUrl(value) {\n  return value.startsWith('url(');\n}\nfunction isIntegerOnly(value) {\n  return Number.isInteger(Number(value));\n}\nfunction isShadow(value) {\n  return shadowRegex.test(value);\n}\n\nexport { isAny, isArbitraryLength, isArbitraryNumber, isArbitraryPosition, isArbitraryShadow, isArbitrarySize, isArbitraryUrl, isArbitraryValue, isArbitraryWeight, isInteger, isLength, isNumber, isPercent, isTshirtSize };\n//# sourceMappingURL=validators.mjs.map\n",
      "start": 1710546154217,
      "end": 1710546154298,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1710546154298,
      "end": 1710546154298,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1710546154298,
      "end": 1710546154298,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1710546154298,
      "end": 1710546154298,
      "order": "pre"
    },
    {
      "name": "fontaine-transform",
      "start": 1710546154298,
      "end": 1710546154298,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1710546154298,
      "end": 1710546154298,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1710546154298,
      "end": 1710546154298,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1710546154298,
      "end": 1710546154298,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1710546154298,
      "end": 1710546154298,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1710546154298,
      "end": 1710546154298,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1710546154298,
      "end": 1710546154298,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1710546154298,
      "end": 1710546154298,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1710546154298,
      "end": 1710546154298,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1710546154298,
      "end": 1710546154298,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1710546154298,
      "end": 1710546154298,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1710546154298,
      "end": 1710546154298,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1710546154298,
      "end": 1710546154298,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1710546154298,
      "end": 1710546154298,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1710546154298,
      "end": 1710546154298,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1710546154298,
      "end": 1710546154298,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1710546154298,
      "end": 1710546154298,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1710546154298,
      "end": 1710546154298,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1710546154298,
      "end": 1710546154298,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1710546154298,
      "end": 1710546154298,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1710546154298,
      "end": 1710546154298,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1710546154298,
      "end": 1710546154298,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1710546154298,
      "end": 1710546154299,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1710546154299,
      "end": 1710546154299,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1710546154299,
      "end": 1710546154299,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1710546154299,
      "end": 1710546154299,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1710546154299,
      "end": 1710546154299,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1710546154299,
      "end": 1710546154299,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1710546154299,
      "end": 1710546154299,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1710546154299,
      "end": 1710546154299,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1710546154299,
      "end": 1710546154299,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1710546154299,
      "end": 1710546154299,
      "order": "normal"
    }
  ]
}
