{
  "resolvedId": "/Users/murtadha.ramadhan/Documents/personal-website-3/node_modules/tailwind-merge/dist/lib/modifier-utils.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "var IMPORTANT_MODIFIER = '!';\nfunction createSplitModifiers(config) {\n  var separator = config.separator || ':';\n  var isSeparatorSingleCharacter = separator.length === 1;\n  var firstSeparatorCharacter = separator[0];\n  var separatorLength = separator.length;\n  // splitModifiers inspired by https://github.com/tailwindlabs/tailwindcss/blob/v3.2.2/src/util/splitAtTopLevelOnly.js\n  return function splitModifiers(className) {\n    var modifiers = [];\n    var bracketDepth = 0;\n    var modifierStart = 0;\n    var postfixModifierPosition;\n    for (var index = 0; index < className.length; index++) {\n      var currentCharacter = className[index];\n      if (bracketDepth === 0) {\n        if (currentCharacter === firstSeparatorCharacter && (isSeparatorSingleCharacter || className.slice(index, index + separatorLength) === separator)) {\n          modifiers.push(className.slice(modifierStart, index));\n          modifierStart = index + separatorLength;\n          continue;\n        }\n        if (currentCharacter === '/') {\n          postfixModifierPosition = index;\n          continue;\n        }\n      }\n      if (currentCharacter === '[') {\n        bracketDepth++;\n      } else if (currentCharacter === ']') {\n        bracketDepth--;\n      }\n    }\n    var baseClassNameWithImportantModifier = modifiers.length === 0 ? className : className.substring(modifierStart);\n    var hasImportantModifier = baseClassNameWithImportantModifier.startsWith(IMPORTANT_MODIFIER);\n    var baseClassName = hasImportantModifier ? baseClassNameWithImportantModifier.substring(1) : baseClassNameWithImportantModifier;\n    var maybePostfixModifierPosition = postfixModifierPosition && postfixModifierPosition > modifierStart ? postfixModifierPosition - modifierStart : undefined;\n    return {\n      modifiers: modifiers,\n      hasImportantModifier: hasImportantModifier,\n      baseClassName: baseClassName,\n      maybePostfixModifierPosition: maybePostfixModifierPosition\n    };\n  };\n}\n/**\n * Sorts modifiers according to following schema:\n * - Predefined modifiers are sorted alphabetically\n * - When an arbitrary variant appears, it must be preserved which modifiers are before and after it\n */\nfunction sortModifiers(modifiers) {\n  if (modifiers.length <= 1) {\n    return modifiers;\n  }\n  var sortedModifiers = [];\n  var unsortedModifiers = [];\n  modifiers.forEach(function (modifier) {\n    var isArbitraryVariant = modifier[0] === '[';\n    if (isArbitraryVariant) {\n      sortedModifiers.push.apply(sortedModifiers, unsortedModifiers.sort().concat([modifier]));\n      unsortedModifiers = [];\n    } else {\n      unsortedModifiers.push(modifier);\n    }\n  });\n  sortedModifiers.push.apply(sortedModifiers, unsortedModifiers.sort());\n  return sortedModifiers;\n}\n\nexport { IMPORTANT_MODIFIER, createSplitModifiers, sortModifiers };\n//# sourceMappingURL=modifier-utils.mjs.map\n",
      "start": 1715671982049,
      "end": 1715671982057,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1715671982057,
      "end": 1715671982057,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1715671982057,
      "end": 1715671982057,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1715671982057,
      "end": 1715671982057,
      "order": "pre"
    },
    {
      "name": "fontaine-transform",
      "start": 1715671982057,
      "end": 1715671982057,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1715671982057,
      "end": 1715671982057,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1715671982057,
      "end": 1715671982057,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1715671982057,
      "end": 1715671982057,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1715671982057,
      "end": 1715671982057,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1715671982057,
      "end": 1715671982057,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1715671982057,
      "end": 1715671982057,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1715671982057,
      "end": 1715671982057,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1715671982057,
      "end": 1715671982058,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1715671982058,
      "end": 1715671982058,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1715671982058,
      "end": 1715671982058,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1715671982058,
      "end": 1715671982058,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1715671982058,
      "end": 1715671982058,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1715671982058,
      "end": 1715671982058,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1715671982058,
      "end": 1715671982058,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1715671982058,
      "end": 1715671982058,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1715671982058,
      "end": 1715671982058,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1715671982058,
      "end": 1715671982058,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1715671982058,
      "end": 1715671982058,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1715671982058,
      "end": 1715671982058,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1715671982058,
      "end": 1715671982058,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1715671982058,
      "end": 1715671982058,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1715671982058,
      "end": 1715671982058,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1715671982058,
      "end": 1715671982058,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1715671982058,
      "end": 1715671982058,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1715671982058,
      "end": 1715671982058,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1715671982058,
      "end": 1715671982058,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1715671982058,
      "end": 1715671982058,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1715671982058,
      "end": 1715671982058,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1715671982058,
      "end": 1715671982058,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1715671982058,
      "end": 1715671982058,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1715671982058,
      "end": 1715671982058,
      "order": "normal"
    }
  ]
}
