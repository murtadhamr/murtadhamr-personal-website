{
  "resolvedId": "/Users/murtadha.ramadhan/Documents/personal-website-3/node_modules/@nuxt/ui/dist/runtime/components/overlays/Tooltip.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n  <div ref=\"trigger\" :class=\"ui.wrapper\" v-bind=\"attrs\" @mouseover=\"onMouseOver\" @mouseleave=\"onMouseLeave\">\n    <slot :open=\"open\">\n      Hover\n    </slot>\n\n    <div v-if=\"open && !prevent\" ref=\"container\" :class=\"[ui.container, ui.width]\">\n      <Transition appear v-bind=\"ui.transition\">\n        <div>\n          <div v-if=\"popper.arrow\" data-popper-arrow :class=\"Object.values(ui.arrow)\" />\n\n          <div :class=\"[ui.base, ui.background, ui.color, ui.rounded, ui.shadow, ui.ring]\">\n            <slot name=\"text\">\n              {{ text }}\n            </slot>\n\n            <span v-if=\"shortcuts?.length\" :class=\"ui.shortcuts\">\n              <span :class=\"ui.middot\">&middot;</span>\n\n              <UKbd v-for=\"shortcut of shortcuts\" :key=\"shortcut\" size=\"xs\">\n                {{ shortcut }}\n              </Ukbd>\n            </span>\n          </div>\n        </div>\n      </Transition>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { computed, ref, toRef, defineComponent } from \"vue\";\nimport { defu } from \"defu\";\nimport UKbd from \"../elements/Kbd.vue\";\nimport { useUI } from \"../../composables/useUI\";\nimport { usePopper } from \"../../composables/usePopper\";\nimport { mergeConfig } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { tooltip } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.tooltip, tooltip);\nexport default defineComponent({\n  components: {\n    UKbd\n  },\n  inheritAttrs: false,\n  props: {\n    text: {\n      type: String,\n      default: null\n    },\n    prevent: {\n      type: Boolean,\n      default: false\n    },\n    shortcuts: {\n      type: Array,\n      default: () => []\n    },\n    openDelay: {\n      type: Number,\n      default: 0\n    },\n    closeDelay: {\n      type: Number,\n      default: 0\n    },\n    popper: {\n      type: Object,\n      default: () => ({})\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(props) {\n    const { ui, attrs } = useUI(\"tooltip\", toRef(props, \"ui\"), config, toRef(props, \"class\"));\n    const popper = computed(() => defu({}, props.popper, ui.value.popper));\n    const [trigger, container] = usePopper(popper.value);\n    const open = ref(false);\n    let openTimeout = null;\n    let closeTimeout = null;\n    function onMouseOver() {\n      if (closeTimeout) {\n        clearTimeout(closeTimeout);\n        closeTimeout = null;\n      }\n      if (open.value) {\n        return;\n      }\n      openTimeout = openTimeout || setTimeout(() => {\n        open.value = true;\n        openTimeout = null;\n      }, props.openDelay);\n    }\n    function onMouseLeave() {\n      if (openTimeout) {\n        clearTimeout(openTimeout);\n        openTimeout = null;\n      }\n      if (!open.value) {\n        return;\n      }\n      closeTimeout = closeTimeout || setTimeout(() => {\n        open.value = false;\n        closeTimeout = null;\n      }, props.closeDelay);\n    }\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      // eslint-disable-next-line vue/no-dupe-keys\n      popper,\n      trigger,\n      container,\n      open,\n      onMouseOver,\n      onMouseLeave\n    };\n  }\n});\n</script>\n",
      "start": 1717378015146,
      "end": 1717378015300,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1717378015300,
      "end": 1717378015300,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1717378015300,
      "end": 1717378015300,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1717378015300,
      "end": 1717378015300,
      "order": "pre"
    },
    {
      "name": "fontaine-transform",
      "start": 1717378015300,
      "end": 1717378015300,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1717378015300,
      "end": 1717378015300,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1717378015300,
      "end": 1717378015300,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1717378015300,
      "end": 1717378015300,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1717378015300,
      "end": 1717378015300,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1717378015300,
      "end": 1717378015300,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "\nimport { computed, ref, toRef, defineComponent } from \"vue\";\nimport { defu } from \"defu\";\nimport UKbd from \"../elements/Kbd.vue\";\nimport { useUI } from \"../../composables/useUI\";\nimport { usePopper } from \"../../composables/usePopper\";\nimport { mergeConfig } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { tooltip } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.tooltip, tooltip);\nconst _sfc_main = defineComponent({\n  components: {\n    UKbd\n  },\n  inheritAttrs: false,\n  props: {\n    text: {\n      type: String,\n      default: null\n    },\n    prevent: {\n      type: Boolean,\n      default: false\n    },\n    shortcuts: {\n      type: Array,\n      default: () => []\n    },\n    openDelay: {\n      type: Number,\n      default: 0\n    },\n    closeDelay: {\n      type: Number,\n      default: 0\n    },\n    popper: {\n      type: Object,\n      default: () => ({})\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(props) {\n    const { ui, attrs } = useUI(\"tooltip\", toRef(props, \"ui\"), config, toRef(props, \"class\"));\n    const popper = computed(() => defu({}, props.popper, ui.value.popper));\n    const [trigger, container] = usePopper(popper.value);\n    const open = ref(false);\n    let openTimeout = null;\n    let closeTimeout = null;\n    function onMouseOver() {\n      if (closeTimeout) {\n        clearTimeout(closeTimeout);\n        closeTimeout = null;\n      }\n      if (open.value) {\n        return;\n      }\n      openTimeout = openTimeout || setTimeout(() => {\n        open.value = true;\n        openTimeout = null;\n      }, props.openDelay);\n    }\n    function onMouseLeave() {\n      if (openTimeout) {\n        clearTimeout(openTimeout);\n        openTimeout = null;\n      }\n      if (!open.value) {\n        return;\n      }\n      closeTimeout = closeTimeout || setTimeout(() => {\n        open.value = false;\n        closeTimeout = null;\n      }, props.closeDelay);\n    }\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      // eslint-disable-next-line vue/no-dupe-keys\n      popper,\n      trigger,\n      container,\n      open,\n      onMouseOver,\n      onMouseLeave\n    };\n  }\n});\n\nimport { renderSlot as _renderSlot, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, Transition as _Transition, mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\"\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_UKbd = _resolveComponent(\"UKbd\")\n\n  return (_openBlock(), _createElementBlock(\"div\", _mergeProps({\n    ref: \"trigger\",\n    class: _ctx.ui.wrapper\n  }, _ctx.attrs, {\n    onMouseover: _cache[0] || (_cache[0] = (...args) => (_ctx.onMouseOver && _ctx.onMouseOver(...args))),\n    onMouseleave: _cache[1] || (_cache[1] = (...args) => (_ctx.onMouseLeave && _ctx.onMouseLeave(...args)))\n  }), [\n    _renderSlot(_ctx.$slots, \"default\", { open: _ctx.open }, () => [\n      _createTextVNode(\" Hover \")\n    ]),\n    (_ctx.open && !_ctx.prevent)\n      ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 0,\n          ref: \"container\",\n          class: _normalizeClass([_ctx.ui.container, _ctx.ui.width])\n        }, [\n          _createVNode(_Transition, _mergeProps({ appear: \"\" }, _ctx.ui.transition), {\n            default: _withCtx(() => [\n              _createElementVNode(\"div\", null, [\n                (_ctx.popper.arrow)\n                  ? (_openBlock(), _createElementBlock(\"div\", {\n                      key: 0,\n                      \"data-popper-arrow\": \"\",\n                      class: _normalizeClass(Object.values(_ctx.ui.arrow))\n                    }, null, 2))\n                  : _createCommentVNode(\"\", true),\n                _createElementVNode(\"div\", {\n                  class: _normalizeClass([_ctx.ui.base, _ctx.ui.background, _ctx.ui.color, _ctx.ui.rounded, _ctx.ui.shadow, _ctx.ui.ring])\n                }, [\n                  _renderSlot(_ctx.$slots, \"text\", {}, () => [\n                    _createTextVNode(_toDisplayString(_ctx.text), 1)\n                  ]),\n                  (_ctx.shortcuts?.length)\n                    ? (_openBlock(), _createElementBlock(\"span\", {\n                        key: 0,\n                        class: _normalizeClass(_ctx.ui.shortcuts)\n                      }, [\n                        _createElementVNode(\"span\", {\n                          class: _normalizeClass(_ctx.ui.middot)\n                        }, \"·\", 2),\n                        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.shortcuts, (shortcut) => {\n                          return (_openBlock(), _createBlock(_component_UKbd, {\n                            key: shortcut,\n                            size: \"xs\"\n                          }, {\n                            default: _withCtx(() => [\n                              _createTextVNode(_toDisplayString(shortcut), 1)\n                            ]),\n                            _: 2\n                          }, 1024))\n                        }), 128))\n                      ], 2))\n                    : _createCommentVNode(\"\", true)\n                ], 2)\n              ])\n            ]),\n            _: 3\n          }, 16)\n        ], 2))\n      : _createCommentVNode(\"\", true)\n  ], 16))\n}\n\n\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['render',_sfc_render]])",
      "start": 1717378015300,
      "end": 1717378015302,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1717378015302,
      "end": 1717378015302,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717378015302,
      "end": 1717378015302,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1717378015302,
      "end": 1717378015302,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1717378015302,
      "end": 1717378015302,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1717378015302,
      "end": 1717378015302,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717378015302,
      "end": 1717378015302,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1717378015302,
      "end": 1717378015302,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1717378015302,
      "end": 1717378015302,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1717378015302,
      "end": 1717378015302,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1717378015302,
      "end": 1717378015302,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1717378015302,
      "end": 1717378015302,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1717378015302,
      "end": 1717378015302,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1717378015302,
      "end": 1717378015302,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1717378015302,
      "end": 1717378015302,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1717378015302,
      "end": 1717378015302,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1717378015302,
      "end": 1717378015302,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1717378015302,
      "end": 1717378015302,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1717378015302,
      "end": 1717378015302,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1717378015302,
      "end": 1717378015302,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1717378015302,
      "end": 1717378015302,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1717378015302,
      "end": 1717378015302,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "result": "import { default as __nuxt_component_0 } from \"/Users/murtadha.ramadhan/Documents/personal-website-3/node_modules/@nuxt/ui/dist/runtime/components/elements/Kbd.vue\";\n\nimport { computed, ref, toRef, defineComponent } from \"vue\";\nimport { defu } from \"defu\";\nimport UKbd from \"../elements/Kbd.vue\";\nimport { useUI } from \"../../composables/useUI\";\nimport { usePopper } from \"../../composables/usePopper\";\nimport { mergeConfig } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { tooltip } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.tooltip, tooltip);\nconst _sfc_main = defineComponent({\n  components: {\n    UKbd\n  },\n  inheritAttrs: false,\n  props: {\n    text: {\n      type: String,\n      default: null\n    },\n    prevent: {\n      type: Boolean,\n      default: false\n    },\n    shortcuts: {\n      type: Array,\n      default: () => []\n    },\n    openDelay: {\n      type: Number,\n      default: 0\n    },\n    closeDelay: {\n      type: Number,\n      default: 0\n    },\n    popper: {\n      type: Object,\n      default: () => ({})\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(props) {\n    const { ui, attrs } = useUI(\"tooltip\", toRef(props, \"ui\"), config, toRef(props, \"class\"));\n    const popper = computed(() => defu({}, props.popper, ui.value.popper));\n    const [trigger, container] = usePopper(popper.value);\n    const open = ref(false);\n    let openTimeout = null;\n    let closeTimeout = null;\n    function onMouseOver() {\n      if (closeTimeout) {\n        clearTimeout(closeTimeout);\n        closeTimeout = null;\n      }\n      if (open.value) {\n        return;\n      }\n      openTimeout = openTimeout || setTimeout(() => {\n        open.value = true;\n        openTimeout = null;\n      }, props.openDelay);\n    }\n    function onMouseLeave() {\n      if (openTimeout) {\n        clearTimeout(openTimeout);\n        openTimeout = null;\n      }\n      if (!open.value) {\n        return;\n      }\n      closeTimeout = closeTimeout || setTimeout(() => {\n        open.value = false;\n        closeTimeout = null;\n      }, props.closeDelay);\n    }\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      // eslint-disable-next-line vue/no-dupe-keys\n      popper,\n      trigger,\n      container,\n      open,\n      onMouseOver,\n      onMouseLeave\n    };\n  }\n});\n\nimport { renderSlot as _renderSlot, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, Transition as _Transition, mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\"\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_UKbd = __nuxt_component_0\n\n  return (_openBlock(), _createElementBlock(\"div\", _mergeProps({\n    ref: \"trigger\",\n    class: _ctx.ui.wrapper\n  }, _ctx.attrs, {\n    onMouseover: _cache[0] || (_cache[0] = (...args) => (_ctx.onMouseOver && _ctx.onMouseOver(...args))),\n    onMouseleave: _cache[1] || (_cache[1] = (...args) => (_ctx.onMouseLeave && _ctx.onMouseLeave(...args)))\n  }), [\n    _renderSlot(_ctx.$slots, \"default\", { open: _ctx.open }, () => [\n      _createTextVNode(\" Hover \")\n    ]),\n    (_ctx.open && !_ctx.prevent)\n      ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 0,\n          ref: \"container\",\n          class: _normalizeClass([_ctx.ui.container, _ctx.ui.width])\n        }, [\n          _createVNode(_Transition, _mergeProps({ appear: \"\" }, _ctx.ui.transition), {\n            default: _withCtx(() => [\n              _createElementVNode(\"div\", null, [\n                (_ctx.popper.arrow)\n                  ? (_openBlock(), _createElementBlock(\"div\", {\n                      key: 0,\n                      \"data-popper-arrow\": \"\",\n                      class: _normalizeClass(Object.values(_ctx.ui.arrow))\n                    }, null, 2))\n                  : _createCommentVNode(\"\", true),\n                _createElementVNode(\"div\", {\n                  class: _normalizeClass([_ctx.ui.base, _ctx.ui.background, _ctx.ui.color, _ctx.ui.rounded, _ctx.ui.shadow, _ctx.ui.ring])\n                }, [\n                  _renderSlot(_ctx.$slots, \"text\", {}, () => [\n                    _createTextVNode(_toDisplayString(_ctx.text), 1)\n                  ]),\n                  (_ctx.shortcuts?.length)\n                    ? (_openBlock(), _createElementBlock(\"span\", {\n                        key: 0,\n                        class: _normalizeClass(_ctx.ui.shortcuts)\n                      }, [\n                        _createElementVNode(\"span\", {\n                          class: _normalizeClass(_ctx.ui.middot)\n                        }, \"·\", 2),\n                        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.shortcuts, (shortcut) => {\n                          return (_openBlock(), _createBlock(_component_UKbd, {\n                            key: shortcut,\n                            size: \"xs\"\n                          }, {\n                            default: _withCtx(() => [\n                              _createTextVNode(_toDisplayString(shortcut), 1)\n                            ]),\n                            _: 2\n                          }, 1024))\n                        }), 128))\n                      ], 2))\n                    : _createCommentVNode(\"\", true)\n                ], 2)\n              ])\n            ]),\n            _: 3\n          }, 16)\n        ], 2))\n      : _createCommentVNode(\"\", true)\n  ], 16))\n}\n\n\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['render',_sfc_render]])",
      "start": 1717378015302,
      "end": 1717378015302,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1717378015302,
      "end": 1717378015302,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1717378015302,
      "end": 1717378015302,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1717378015302,
      "end": 1717378015302,
      "order": "normal"
    }
  ]
}
